@model Equipment.Models.Equipment

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/shared/_Layout.cshtml";
}

<h2>Equipment Details</h2>
<hr />
@using (Html.BeginForm())
{
    <div class="form-horizontal" role="form">

        <div class="container row">
            <div class="form-group col-md-10 col-md-offset-2">
                @Html.Raw(ViewBag.Msg)
            </div>
        </div>



        <div class="form-group">

            @Html.LabelFor(model => model.Asset, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Asset, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.Asset, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Category, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Category, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.Category, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.Specification, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Specification, new { @class = "form-control" , @readonly = "readonly"})
                @Html.ValidationMessageFor(m => m.Specification, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Brand, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Brand, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.Brand, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.PurchasedVendorDetails, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.PurchasedVendorDetails, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.PurchasedVendorDetails, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.CalibrationVendorDetails, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.CalibrationVendorDetails, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.CalibrationVendorDetails, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.PurchasedVendorEmail, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.PurchasedVendorEmail, new { @class = "form-control" , @readonly = "readonly"})
                @Html.ValidationMessageFor(m => m.PurchasedVendorEmail, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.CalibrationVendorEmail, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.CalibrationVendorEmail, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.CalibrationVendorEmail, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.PONo, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.PONo, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.PONo, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.PODate, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(model => model.PODate,  "{0:dd/MM/yyyy}",new { @class = "form-control", id = "DOBDisplayText", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.PODate, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">



            @Html.LabelFor(model => model.RecievedDate, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(model => model.RecievedDate,  "{0:dd/MM/yyyy}",new { @class = "form-control", id = "RecivedDate", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.RecievedDate, "", new { @class = "text-danger" })

            </div>

            @Html.LabelFor(model => model.Factoryunit, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
              
                @Html.DropDownListFor(modelItem => modelItem.Factoryunit,new SelectList(ViewBag.FactoryUnitlist,"Value","Text",Model.Factoryunit),new { @class = "form-control" , @disabled = "disabled" })
                @Html.ValidationMessageFor(m => m.Factoryunit, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">



            @Html.LabelFor(model => model.Department, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
           @Html.DropDownListFor(modelItem => modelItem.Department,new SelectList(ViewBag.DepartmentList,"Value","Text",Model.Department),new { @class = "form-control" ,  @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })

            </div>

            @Html.LabelFor(model => model.Photo, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @if (Model.Photo.Length == 0)
                {
                    <label id="nophoto" style="color:red;font-family:Arial;text-align:left"  >Photo file not uploaded</label>
                     
                }
                else
                {
                <img  src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.Photo))" style="width:70px;height:70px">
                }
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.OperatingInstructionpdf, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @if (Model.OperatingInstructionpdf.Length == 0)
                {
                    <label id="oprpdf" style="color:red;font-family:Arial;text-align:left"  >Operating Instruction pdf file not uploaded</label>
                     
                }
                else
                {
                 //@Html.ActionLink("Click here to View", "DownloadoprpdfFile", new { id=Model.Id })
                     <a href="@Url.Action("DownloadoprpdfFile", "Equipment", new { id = Model.Id }) ">
                           <img src="~/Image/pdfioc.png" style="width:30px;height:25px" />
                      </a>  
                }
                @Html.ValidationMessageFor(model => model.OperatingInstructionpdf, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Datasheetpdf, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                 @if (Model.Datasheetpdf.Length == 0)
                {
                    <label id="datapdf" style="color:red;font-family:Arial;text-align:left"  >Datasheet pdf file not uploaded</label>
                     
                }
                else
                {
                 //@Html.ActionLink("Click here to View", "DownloaddatapdfFile", new { id=Model.Id })
                     <a href="@Url.Action("DownloaddatapdfFile", "Equipment", new { id = Model.Id }) ">
                           <img src="~/Image/pdfioc.png" style="width:30px;height:25px" />
                      </a> 
                }
                @Html.ValidationMessageFor(model => model.Datasheetpdf, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group">



            @Html.LabelFor(model => model.Cataloguepdf, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
              @if (Model.Cataloguepdf.Length == 0)
                {
                    <label id="catpdf" style="color:red;font-family:Arial;text-align:left"  >Datasheet pdf file not uploaded</label>
                     
                }
                else
                {
                // @Html.ActionLink("Click here to View", "DownloadcatpdfFile", new { id=Model.Id })
                    <a href="@Url.Action("DownloadcatpdfFile", "Equipment", new { id = Model.Id }) ">
                           <img src="~/Image/pdfioc.png" style="width:30px;height:25px" />
                      </a> 
                }
                @Html.ValidationMessageFor(model => model.Cataloguepdf, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Responsible, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Responsible, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.Responsible, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">



            @Html.LabelFor(model => model.Emailid, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Emailid, new { @class = "form-control" , @readonly = "readonly"})
                @Html.ValidationMessageFor(m => m.Emailid, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Empcd, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Empcd, new { @class = "form-control" ,@readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.Empcd, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group">



            @Html.LabelFor(model => model.Specification1, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Specification1, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.Specification1, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Purchaseddate, new { @class = "control-label col-md-2" })

            <div class="col-md-4">

                @Html.TextBoxFor(model => model.Purchaseddate,  "{0:dd/MM/yyyy}",new { @class = "form-control", id = "Purchaseddate", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.Purchaseddate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">


            @Html.LabelFor(model => model.Value, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Value, new { @class = "form-control" , @readonly = "readonly"})
                @Html.ValidationMessageFor(m => m.Value, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Age, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Age, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.Age, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">



            @Html.LabelFor(model => model.Prevcalibration, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Prevcalibration, new { @class = "form-control" , @readonly = "readonly"})
                @Html.ValidationMessageFor(m => m.Prevcalibration, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Calibrationduedate, new { @class = "control-label col-md-2" })

            <div class="col-md-4">

                @Html.TextBoxFor(model => model.Calibrationduedate, "{0:dd/MM/yyyy}", new { @class = "form-control", id = "Calibrationduedate", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.Calibrationduedate, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group">



            @Html.LabelFor(model => model.Active, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
              @Html.RadioButtonFor(model => model.Active, "Yes", Model.Active == "Yes" ? "checked" : string.Empty ) Yes
                @Html.RadioButtonFor(model => model.Active, "No",  Model.Active == "No" ? "checked" : string.Empty) No
                @Html.ValidationMessageFor(m => m.Active, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.HandedOverto, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.HandedOverto, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.HandedOverto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">



            @Html.LabelFor(model => model.Remark1, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Remark1, new { @class = "form-control" , @readonly = "readonly"})
                @Html.ValidationMessageFor(m => m.Remark1, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Remark2, new { @class = "control-label col-md-2" })

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Remark2, new { @class = "form-control" , @readonly = "readonly"})
                @Html.ValidationMessageFor(m => m.Remark2, "", new { @class = "text-danger" })
            </div>
        </div>


    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
